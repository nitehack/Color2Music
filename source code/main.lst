CCS PCM C Compiler, Version 4.104, 5967               13-nov.-14 20:55

               Filename: C:\Nico\Teleco 4º\TCI\Codigo\main.lst

               ROM used: 911 words (22%)
                         Largest free fragment is 2048
               RAM used: 29 (8%) at main() level
                         54 (15%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   1FC
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  27
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  BCF    03.7
0019:  BCF    03.5
001A:  BTFSS  0B.4
001B:  GOTO   01E
001C:  BTFSC  0B.1
001D:  GOTO   02F
001E:  MOVF   22,W
001F:  MOVWF  04
0020:  MOVF   23,W
0021:  MOVWF  77
0022:  MOVF   24,W
0023:  MOVWF  78
0024:  MOVF   25,W
0025:  MOVWF  79
0026:  MOVF   26,W
0027:  MOVWF  7A
0028:  MOVF   27,W
0029:  MOVWF  0A
002A:  SWAPF  21,W
002B:  MOVWF  03
002C:  SWAPF  7F,F
002D:  SWAPF  7F,W
002E:  RETFIE
002F:  BCF    0A.3
0030:  GOTO   031
.................... #include "C:\Nico\Teleco 4º\TCI\Codigo\main.h" 
.................... #include <16F88.h> 
.................... //////// Standard Header file for the PIC16F88 device //////////////// 
.................... #device PIC16F88 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES INTRC_IO                 //Internal RC Osc, no CLKOUT 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES MCLR                     //Master Clear pin enabled 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=8000000) 
*
0042:  MOVLW  3D
0043:  MOVWF  04
0044:  BCF    03.7
0045:  MOVF   00,W
0046:  BTFSC  03.2
0047:  GOTO   055
0048:  MOVLW  02
0049:  MOVWF  78
004A:  CLRF   77
004B:  DECFSZ 77,F
004C:  GOTO   04B
004D:  DECFSZ 78,F
004E:  GOTO   04A
004F:  MOVLW  97
0050:  MOVWF  77
0051:  DECFSZ 77,F
0052:  GOTO   051
0053:  DECFSZ 00,F
0054:  GOTO   048
0055:  RETURN
....................  
....................  
.................... #define S0 PIN_B1 
.................... #define S1 PIN_B2 
.................... #define S2 PIN_B3 
.................... #define S3 PIN_B4 
.................... #define OE PIN_B5 
....................  
.................... //Hay que poner el máximo de frecuencia para medir tiempos muy cortos y el minimo de 
.................... // rango para que el error para medir la frecuencia con el metodo de medir 
.................... // el periodo sea minimo ya que falla solo cuando son muy altas las frecuencias 
.................... //Preescaler de 4 con minimo de 7 Hz 
.................... // Si se desborda el timer poner una interrupcion y poner de frecuencia 0Hz 
.................... //Poner reloj de 20 MHz externo 
....................  
.................... //Posibles problemas!!: Que el contador del timer se desborde por que pase demasiado tiempo , es decir cuando sean bajas frecuencias 
.................... int16 tiempo=0; 
....................  
.................... #INT_EXT 
.................... void llega_pulso(void) { 
....................    tiempo=get_timer1(); // 
*
0031:  MOVF   0F,W
0032:  MOVWF  7A
0033:  MOVF   0E,W
0034:  MOVWF  77
0035:  MOVF   0F,W
0036:  SUBWF  7A,W
0037:  BTFSS  03.2
0038:  GOTO   031
0039:  MOVF   77,W
003A:  MOVWF  28
003B:  MOVF   7A,W
003C:  MOVWF  29
....................    set_timer1(0); //reinicia para nuevo pulso 
003D:  CLRF   0F
003E:  CLRF   0E
.................... } 
....................  
003F:  BCF    0B.1
0040:  BCF    0A.3
0041:  GOTO   01E
.................... int16 calcula_frecuencia(){ 
....................    int16 tiempo_cal; 
....................    int16 frecuencia; 
....................    tiempo_cal=tiempo*2; //Es 4ciclos*T*4 del preescaler*ELm timer 
*
0056:  BCF    03.0
0057:  RLF    28,W
0058:  MOVWF  3F
0059:  RLF    29,W
005A:  MOVWF  40
....................    frecuencia=1000000.0/tiempo_cal; //esto es porque 1/(2N*micro)=(10^6)/2N 
005B:  MOVF   40,W
005C:  MOVWF  44
005D:  MOVF   3F,W
005E:  MOVWF  43
*
007B:  CLRF   46
007C:  MOVLW  24
007D:  MOVWF  45
007E:  MOVLW  74
007F:  MOVWF  44
0080:  MOVLW  92
0081:  MOVWF  43
0082:  MOVF   7A,W
0083:  MOVWF  4A
0084:  MOVF   79,W
0085:  MOVWF  49
0086:  MOVF   78,W
0087:  MOVWF  48
0088:  MOVF   77,W
0089:  MOVWF  47
*
0153:  MOVF   7A,W
0154:  MOVWF  46
0155:  MOVF   79,W
0156:  MOVWF  45
0157:  MOVF   78,W
0158:  MOVWF  44
0159:  MOVF   77,W
015A:  MOVWF  43
*
0179:  MOVF   79,W
017A:  MOVWF  42
017B:  MOVF   78,W
017C:  MOVWF  41
....................    return frecuencia; 
017D:  MOVF   41,W
017E:  MOVWF  78
017F:  MOVF   42,W
0180:  MOVWF  79
.................... } 
0181:  RETURN
....................  
....................  
.................... void leer_frecuencia_color(int16 *frecuencia_R, int16 *frecuencia_G, int16 *frecuencia_B){ 
....................    output_high(OE); 
0182:  BSF    03.5
0183:  BCF    06.5
0184:  BCF    03.5
0185:  BSF    06.5
....................    output_low(S2); 
0186:  BSF    03.5
0187:  BCF    06.3
0188:  BCF    03.5
0189:  BCF    06.3
....................    output_low(S3); 
018A:  BSF    03.5
018B:  BCF    06.4
018C:  BCF    03.5
018D:  BCF    06.4
....................     
....................    delay_ms(1); 
018E:  MOVLW  01
018F:  MOVWF  3D
0190:  CALL   042
....................    output_low(OE); 
0191:  BSF    03.5
0192:  BCF    06.5
0193:  BCF    03.5
0194:  BCF    06.5
....................    delay_ms(10); 
0195:  MOVLW  0A
0196:  MOVWF  3D
0197:  CALL   042
....................    *frecuencia_R=calcula_frecuencia(); 
0198:  MOVF   38,W
0199:  MOVWF  7A
019A:  MOVF   37,W
019B:  MOVWF  3D
019C:  MOVF   38,W
019D:  MOVWF  3E
019E:  CALL   056
019F:  MOVF   3D,W
01A0:  MOVWF  04
01A1:  BCF    03.7
01A2:  BTFSC  3E.0
01A3:  BSF    03.7
01A4:  INCF   04,F
01A5:  MOVF   79,W
01A6:  MOVWF  00
01A7:  DECF   04,F
01A8:  MOVF   78,W
01A9:  MOVWF  00
....................     
....................    //Azul 
....................    output_high(OE); 
01AA:  BSF    03.5
01AB:  BCF    06.5
01AC:  BCF    03.5
01AD:  BSF    06.5
....................    output_low(S2); 
01AE:  BSF    03.5
01AF:  BCF    06.3
01B0:  BCF    03.5
01B1:  BCF    06.3
....................    output_high(S3); 
01B2:  BSF    03.5
01B3:  BCF    06.4
01B4:  BCF    03.5
01B5:  BSF    06.4
....................     
....................    delay_ms(1); 
01B6:  MOVLW  01
01B7:  MOVWF  3D
01B8:  CALL   042
....................    output_low(OE); 
01B9:  BSF    03.5
01BA:  BCF    06.5
01BB:  BCF    03.5
01BC:  BCF    06.5
....................    delay_ms(10); 
01BD:  MOVLW  0A
01BE:  MOVWF  3D
01BF:  CALL   042
....................    *frecuencia_B=calcula_frecuencia(); 
01C0:  MOVF   3C,W
01C1:  MOVWF  7A
01C2:  MOVF   3B,W
01C3:  MOVWF  3D
01C4:  MOVF   3C,W
01C5:  MOVWF  3E
01C6:  CALL   056
01C7:  MOVF   3D,W
01C8:  MOVWF  04
01C9:  BCF    03.7
01CA:  BTFSC  3E.0
01CB:  BSF    03.7
01CC:  INCF   04,F
01CD:  MOVF   79,W
01CE:  MOVWF  00
01CF:  DECF   04,F
01D0:  MOVF   78,W
01D1:  MOVWF  00
....................     
....................    //Verde 
....................    output_high(OE); 
01D2:  BSF    03.5
01D3:  BCF    06.5
01D4:  BCF    03.5
01D5:  BSF    06.5
....................    output_high(S2); 
01D6:  BSF    03.5
01D7:  BCF    06.3
01D8:  BCF    03.5
01D9:  BSF    06.3
....................    output_high(S3); 
01DA:  BSF    03.5
01DB:  BCF    06.4
01DC:  BCF    03.5
01DD:  BSF    06.4
....................     
....................    delay_ms(1); 
01DE:  MOVLW  01
01DF:  MOVWF  3D
01E0:  CALL   042
....................    output_low(OE); 
01E1:  BSF    03.5
01E2:  BCF    06.5
01E3:  BCF    03.5
01E4:  BCF    06.5
....................    delay_ms(10); 
01E5:  MOVLW  0A
01E6:  MOVWF  3D
01E7:  CALL   042
....................    *frecuencia_G=calcula_frecuencia(); 
01E8:  MOVF   3A,W
01E9:  MOVWF  7A
01EA:  MOVF   39,W
01EB:  MOVWF  3D
01EC:  MOVF   3A,W
01ED:  MOVWF  3E
01EE:  CALL   056
01EF:  MOVF   3D,W
01F0:  MOVWF  04
01F1:  BCF    03.7
01F2:  BTFSC  3E.0
01F3:  BSF    03.7
01F4:  INCF   04,F
01F5:  MOVF   79,W
01F6:  MOVWF  00
01F7:  DECF   04,F
01F8:  MOVF   78,W
01F9:  MOVWF  00
.................... } 
01FA:  BCF    0A.3
01FB:  GOTO   238 (RETURN)
.................... //Capturar flanco-> contar tiempo-> Capturar flanco-> Parar tiempo-> Leer tiempo-> Cambiar a frecuencia 
....................  
....................  
.................... void main() 
.................... { 
01FC:  CLRF   04
01FD:  BCF    03.7
01FE:  MOVLW  1F
01FF:  ANDWF  03,F
0200:  MOVLW  72
0201:  BSF    03.5
0202:  MOVWF  0F
0203:  MOVF   0F,W
0204:  BCF    03.5
0205:  CLRF   29
0206:  CLRF   28
0207:  BSF    03.5
0208:  BCF    1F.4
0209:  BCF    1F.5
020A:  MOVF   1B,W
020B:  ANDLW  80
020C:  MOVWF  1B
020D:  MOVLW  07
020E:  MOVWF  1C
020F:  BCF    03.5
0210:  CLRF   2B
0211:  CLRF   2A
0212:  CLRF   2D
0213:  CLRF   2C
0214:  CLRF   2F
0215:  CLRF   2E
0216:  CLRF   33
0217:  CLRF   32
0218:  CLRF   31
0219:  CLRF   30
021A:  CLRF   34
021B:  CLRF   35
021C:  CLRF   36
....................    int16 frecuencia_R=0; 
....................    int16 frecuencia_G=0; 
....................    int16 frecuencia_B=0; 
....................    int32 tiempo_cal=0; 
....................    int8 dato=0; 
....................    int8 maximo=0; 
....................    int8 direccion=0; 
....................  
....................  
....................    ext_int_edge(0,L_TO_H); //Flanco ascendente 
021D:  BSF    03.5
021E:  BSF    01.6
....................    enable_interrupts(INT_EXT); 
021F:  BCF    03.5
0220:  BSF    0B.4
....................    clear_interrupt(INT_EXT); //Borramos el flag 
0221:  BCF    0B.1
....................    enable_interrupts(GLOBAL); 
0222:  MOVLW  C0
0223:  IORWF  0B,F
....................    // TODO: USER CODE!! 
....................    setup_timer_1(T1_INTERNAL | T1_DIV_BY_4);//para llegar a medir frecuencias bajas 
0224:  MOVLW  A5
0225:  MOVWF  10
....................     
....................    output_low(S0);// Para seleccionar el rango de 12 KHz 
0226:  BSF    03.5
0227:  BCF    06.1
0228:  BCF    03.5
0229:  BCF    06.1
....................    output_high(S1); 
022A:  BSF    03.5
022B:  BCF    06.2
022C:  BCF    03.5
022D:  BSF    06.2
....................    while(true){ 
....................       leer_frecuencia_color(&frecuencia_R,&frecuencia_G, &frecuencia_B); 
022E:  CLRF   38
022F:  MOVLW  2A
0230:  MOVWF  37
0231:  CLRF   3A
0232:  MOVLW  2C
0233:  MOVWF  39
0234:  CLRF   3C
0235:  MOVLW  2E
0236:  MOVWF  3B
0237:  GOTO   182
....................       dato=(int8)(frecuencia_R>>8); 
0238:  MOVF   2B,W
0239:  CLRF   7A
023A:  MOVWF  34
....................       write_eeprom(direccion, dato); 
023B:  MOVF   36,W
023C:  BSF    03.6
023D:  MOVWF  0D
023E:  BCF    03.6
023F:  MOVF   34,W
0240:  BSF    03.6
0241:  MOVWF  0C
0242:  BSF    03.5
0243:  BCF    0C.7
0244:  BSF    0C.2
0245:  BCF    03.5
0246:  BCF    03.6
0247:  MOVF   0B,W
0248:  MOVWF  77
0249:  BCF    0B.7
024A:  BSF    03.5
024B:  BSF    03.6
024C:  MOVLW  55
024D:  MOVWF  0D
024E:  MOVLW  AA
024F:  MOVWF  0D
0250:  BSF    0C.1
0251:  BTFSC  0C.1
0252:  GOTO   251
0253:  BCF    0C.2
0254:  MOVF   77,W
0255:  BCF    03.5
0256:  BCF    03.6
0257:  IORWF  0B,F
....................       dato=(int8)(frecuencia_R); 
0258:  MOVF   2A,W
0259:  MOVWF  34
....................       write_eeprom(direccion+1, dato); 
025A:  MOVLW  01
025B:  ADDWF  36,W
025C:  MOVWF  37
025D:  MOVF   37,W
025E:  BSF    03.6
025F:  MOVWF  0D
0260:  BCF    03.6
0261:  MOVF   34,W
0262:  BSF    03.6
0263:  MOVWF  0C
0264:  BSF    03.5
0265:  BCF    0C.7
0266:  BSF    0C.2
0267:  BCF    03.5
0268:  BCF    03.6
0269:  MOVF   0B,W
026A:  MOVWF  77
026B:  BCF    0B.7
026C:  BSF    03.5
026D:  BSF    03.6
026E:  MOVLW  55
026F:  MOVWF  0D
0270:  MOVLW  AA
0271:  MOVWF  0D
0272:  BSF    0C.1
0273:  BTFSC  0C.1
0274:  GOTO   273
0275:  BCF    0C.2
0276:  MOVF   77,W
0277:  BCF    03.5
0278:  BCF    03.6
0279:  IORWF  0B,F
....................        
....................       dato=(int8)(frecuencia_G>>8); 
027A:  MOVF   2D,W
027B:  CLRF   7A
027C:  MOVWF  34
....................       write_eeprom(direccion+2, dato); 
027D:  MOVLW  02
027E:  ADDWF  36,W
027F:  MOVWF  37
0280:  MOVF   37,W
0281:  BSF    03.6
0282:  MOVWF  0D
0283:  BCF    03.6
0284:  MOVF   34,W
0285:  BSF    03.6
0286:  MOVWF  0C
0287:  BSF    03.5
0288:  BCF    0C.7
0289:  BSF    0C.2
028A:  BCF    03.5
028B:  BCF    03.6
028C:  MOVF   0B,W
028D:  MOVWF  77
028E:  BCF    0B.7
028F:  BSF    03.5
0290:  BSF    03.6
0291:  MOVLW  55
0292:  MOVWF  0D
0293:  MOVLW  AA
0294:  MOVWF  0D
0295:  BSF    0C.1
0296:  BTFSC  0C.1
0297:  GOTO   296
0298:  BCF    0C.2
0299:  MOVF   77,W
029A:  BCF    03.5
029B:  BCF    03.6
029C:  IORWF  0B,F
....................       dato=(int8)(frecuencia_G); 
029D:  MOVF   2C,W
029E:  MOVWF  34
....................       write_eeprom(direccion+3, dato); 
029F:  MOVLW  03
02A0:  ADDWF  36,W
02A1:  MOVWF  37
02A2:  MOVF   37,W
02A3:  BSF    03.6
02A4:  MOVWF  0D
02A5:  BCF    03.6
02A6:  MOVF   34,W
02A7:  BSF    03.6
02A8:  MOVWF  0C
02A9:  BSF    03.5
02AA:  BCF    0C.7
02AB:  BSF    0C.2
02AC:  BCF    03.5
02AD:  BCF    03.6
02AE:  MOVF   0B,W
02AF:  MOVWF  77
02B0:  BCF    0B.7
02B1:  BSF    03.5
02B2:  BSF    03.6
02B3:  MOVLW  55
02B4:  MOVWF  0D
02B5:  MOVLW  AA
02B6:  MOVWF  0D
02B7:  BSF    0C.1
02B8:  BTFSC  0C.1
02B9:  GOTO   2B8
02BA:  BCF    0C.2
02BB:  MOVF   77,W
02BC:  BCF    03.5
02BD:  BCF    03.6
02BE:  IORWF  0B,F
....................        
....................       dato=(int8)(frecuencia_B>>8); 
02BF:  MOVF   2F,W
02C0:  CLRF   7A
02C1:  MOVWF  34
....................       write_eeprom(direccion+4, dato); 
02C2:  MOVLW  04
02C3:  ADDWF  36,W
02C4:  MOVWF  37
02C5:  MOVF   37,W
02C6:  BSF    03.6
02C7:  MOVWF  0D
02C8:  BCF    03.6
02C9:  MOVF   34,W
02CA:  BSF    03.6
02CB:  MOVWF  0C
02CC:  BSF    03.5
02CD:  BCF    0C.7
02CE:  BSF    0C.2
02CF:  BCF    03.5
02D0:  BCF    03.6
02D1:  MOVF   0B,W
02D2:  MOVWF  77
02D3:  BCF    0B.7
02D4:  BSF    03.5
02D5:  BSF    03.6
02D6:  MOVLW  55
02D7:  MOVWF  0D
02D8:  MOVLW  AA
02D9:  MOVWF  0D
02DA:  BSF    0C.1
02DB:  BTFSC  0C.1
02DC:  GOTO   2DB
02DD:  BCF    0C.2
02DE:  MOVF   77,W
02DF:  BCF    03.5
02E0:  BCF    03.6
02E1:  IORWF  0B,F
....................       dato=(int8)(frecuencia_B); 
02E2:  MOVF   2E,W
02E3:  MOVWF  34
....................       write_eeprom(direccion+5, dato); 
02E4:  MOVLW  05
02E5:  ADDWF  36,W
02E6:  MOVWF  37
02E7:  MOVF   37,W
02E8:  BSF    03.6
02E9:  MOVWF  0D
02EA:  BCF    03.6
02EB:  MOVF   34,W
02EC:  BSF    03.6
02ED:  MOVWF  0C
02EE:  BSF    03.5
02EF:  BCF    0C.7
02F0:  BSF    0C.2
02F1:  BCF    03.5
02F2:  BCF    03.6
02F3:  MOVF   0B,W
02F4:  MOVWF  77
02F5:  BCF    0B.7
02F6:  BSF    03.5
02F7:  BSF    03.6
02F8:  MOVLW  55
02F9:  MOVWF  0D
02FA:  MOVLW  AA
02FB:  MOVWF  0D
02FC:  BSF    0C.1
02FD:  BTFSC  0C.1
02FE:  GOTO   2FD
02FF:  BCF    0C.2
0300:  MOVF   77,W
0301:  BCF    03.5
0302:  BCF    03.6
0303:  IORWF  0B,F
....................        
....................       direccion=direccion+7; 
0304:  MOVLW  07
0305:  ADDWF  36,F
....................        
....................       if((frecuencia_R<288)&&(frecuencia_G<208)&&(frecuencia_B<208)){ 
0306:  MOVF   2B,W
0307:  SUBLW  01
0308:  BTFSS  03.0
0309:  GOTO   320
030A:  BTFSS  03.2
030B:  GOTO   310
030C:  MOVF   2A,W
030D:  SUBLW  1F
030E:  BTFSS  03.0
030F:  GOTO   320
0310:  MOVF   2D,F
0311:  BTFSS  03.2
0312:  GOTO   320
0313:  MOVF   2C,W
0314:  SUBLW  CF
0315:  BTFSS  03.0
0316:  GOTO   320
0317:  MOVF   2F,F
0318:  BTFSS  03.2
0319:  GOTO   320
031A:  MOVF   2E,W
031B:  SUBLW  CF
031C:  BTFSS  03.0
031D:  GOTO   320
....................          maximo=0; 
031E:  CLRF   35
....................       } 
....................       else{ 
031F:  GOTO   349
....................          if(frecuencia_R>frecuencia_G){ 
0320:  MOVF   2D,W
0321:  SUBWF  2B,W
0322:  BTFSS  03.0
0323:  GOTO   33A
0324:  BTFSS  03.2
0325:  GOTO   32A
0326:  MOVF   2A,W
0327:  SUBWF  2C,W
0328:  BTFSC  03.0
0329:  GOTO   33A
....................             if(frecuencia_R>frecuencia_B){ 
032A:  MOVF   2F,W
032B:  SUBWF  2B,W
032C:  BTFSS  03.0
032D:  GOTO   337
032E:  BTFSS  03.2
032F:  GOTO   334
0330:  MOVF   2A,W
0331:  SUBWF  2E,W
0332:  BTFSC  03.0
0333:  GOTO   337
....................                maximo=1; 
0334:  MOVLW  01
0335:  MOVWF  35
....................             } 
....................             else{ 
0336:  GOTO   339
....................                maximo=3; 
0337:  MOVLW  03
0338:  MOVWF  35
....................             } 
....................          } 
....................          else{ 
0339:  GOTO   349
....................             if(frecuencia_G>frecuencia_B){ 
033A:  MOVF   2F,W
033B:  SUBWF  2D,W
033C:  BTFSS  03.0
033D:  GOTO   347
033E:  BTFSS  03.2
033F:  GOTO   344
0340:  MOVF   2C,W
0341:  SUBWF  2E,W
0342:  BTFSC  03.0
0343:  GOTO   347
....................                maximo=2; 
0344:  MOVLW  02
0345:  MOVWF  35
....................             } 
....................             else{ 
0346:  GOTO   349
....................                maximo=3; 
0347:  MOVLW  03
0348:  MOVWF  35
....................             } 
....................          } 
....................       } 
....................       switch(maximo){ 
0349:  MOVF   35,W
034A:  XORLW  01
034B:  BTFSC  03.2
034C:  GOTO   354
034D:  XORLW  03
034E:  BTFSC  03.2
034F:  GOTO   361
0350:  XORLW  01
0351:  BTFSC  03.2
0352:  GOTO   36E
0353:  GOTO   37B
....................          case 1: 
....................             output_low(PIN_A1); 
0354:  BSF    03.5
0355:  BCF    05.1
0356:  BCF    03.5
0357:  BCF    05.1
....................             output_low(PIN_A2); 
0358:  BSF    03.5
0359:  BCF    05.2
035A:  BCF    03.5
035B:  BCF    05.2
....................             output_high(PIN_A0); 
035C:  BSF    03.5
035D:  BCF    05.0
035E:  BCF    03.5
035F:  BSF    05.0
....................             break; 
0360:  GOTO   388
....................          case 2: 
....................             output_low(PIN_A0); 
0361:  BSF    03.5
0362:  BCF    05.0
0363:  BCF    03.5
0364:  BCF    05.0
....................             output_low(PIN_A2); 
0365:  BSF    03.5
0366:  BCF    05.2
0367:  BCF    03.5
0368:  BCF    05.2
....................             output_high(PIN_A1); 
0369:  BSF    03.5
036A:  BCF    05.1
036B:  BCF    03.5
036C:  BSF    05.1
....................             break; 
036D:  GOTO   388
....................              
....................          case 3: 
....................             output_low(PIN_A0); 
036E:  BSF    03.5
036F:  BCF    05.0
0370:  BCF    03.5
0371:  BCF    05.0
....................             output_low(PIN_A1); 
0372:  BSF    03.5
0373:  BCF    05.1
0374:  BCF    03.5
0375:  BCF    05.1
....................             output_high(PIN_A2); 
0376:  BSF    03.5
0377:  BCF    05.2
0378:  BCF    03.5
0379:  BSF    05.2
....................             break; 
037A:  GOTO   388
....................          default: 
....................             output_low(PIN_A0); 
037B:  BSF    03.5
037C:  BCF    05.0
037D:  BCF    03.5
037E:  BCF    05.0
....................             output_low(PIN_A1); 
037F:  BSF    03.5
0380:  BCF    05.1
0381:  BCF    03.5
0382:  BCF    05.1
....................             output_low(PIN_A2); 
0383:  BSF    03.5
0384:  BCF    05.2
0385:  BCF    03.5
0386:  BCF    05.2
....................             break; 
0387:  GOTO   388
....................       } 
....................       if (direccion>=240){ 
0388:  MOVF   36,W
0389:  SUBLW  EF
038A:  BTFSC  03.0
038B:  GOTO   38D
....................          direccion=0; 
038C:  CLRF   36
....................       } 
....................    } 
038D:  GOTO   22E
....................     
.................... } 
038E:  SLEEP

Configuration Fuses:
   Word  1: 3F38   NOWDT NOPUT MCLR NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT INTRC_IO
   Word  2: 3FFF   FCMEN IESO
